(function(e,t){"object"==typeof exports?module.exports=exports=t(require("./core"),require("./sha1"),require("./hmac")):"function"==typeof define&&define.amd?define(["./core","./sha1","./hmac"],t):t(e.CryptoJS)})(this,function(e){return function(){var t=e,r=t.lib,n=r.Base,i=r.WordArray,o=t.algo,a=o.SHA1,s=o.HMAC,c=o.PBKDF2=n.extend({cfg:n.extend({keySize:4,hasher:a,iterations:1}),init:function(e){this.cfg=this.cfg.extend(e)},compute:function(e,t){for(var r=this.cfg,n=s.create(r.hasher,e),o=i.create(),a=i.create([1]),c=o.words,f=a.words,h=r.keySize,u=r.iterations;h>c.length;){var l=n.update(t).finalize(a);n.reset();for(var d=l.words,p=d.length,v=l,y=1;u>y;y++){v=n.finalize(v),n.reset();for(var g=v.words,w=0;p>w;w++)d[w]^=g[w]}o.concat(l),f[0]++}return o.sigBytes=4*h,o}});t.PBKDF2=function(e,t,r){return c.create(r).compute(e,t)}}(),e.PBKDF2});